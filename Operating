 * ДЗ "3.3. Операционные системы. Лекция 1"
* 1. Какой системный вызов делает команда cd?....
* Ответ: системный вызов команды CD -> chdir("/tmp")
* 2.Ответ:
* Файл базы типов - /usr/share/misc/magic.mgc
* в тексте это: openat(AT_FDCWD, "/usr/share/misc/magic.mgc", O_RDONLY) = 3

* 3. Ответ: vagrant@vagrant:~$ lsof -p 1126
*...
* vi      1126 vagrant    4u   REG  253,0    12288  526898 /home/vagrant/.tst_bash.swp (deleted)

* vagrant@vagrant:~$ echo '' >/proc/1126/fd/4
* где 1126 - PID процесса vi
* 4 - дескриптор файла  



* 4. Ответ: Зомби - дочерний процесс в Unix-системе, завершивший своё выполнение, но ещё присутствующий в списке процессов операционной системы, чтобы дать родительскому 
* процессу считать код завершения. Зомби не занимают памяти (как процессы-сироты), но блокируют записи в таблице процессов, размер которой ограничен для каждого 
* пользователя и с истемы в целом.

* 5. Ответ:

* root@vagrant:~# dpkg -L bpfcc-tools | grep sbin/opensnoop
*/usr/sbin/opensnoop-bpfcc
* root@vagrant:~# /usr/sbin/opensnoop-bpfcc
* 884    vminfo              6   0 /var/run/utmp
* 636    dbus-daemon        -1   2 /usr/local/share/dbus-1/system-services
* 636    dbus-daemon        21   0 /usr/share/dbus-1/system-services
* 636    dbus-daemon        -1   2 /lib/dbus-1/system-services
* 636    dbus-daemon        21   0 /var/lib/snapd/dbus-1/system-services/ 

* 6. Ответ: Цитата :
* Part of the utsname information is also accessible  via  /proc/sys/ker‐nel/{ostype, hostname, osrelease, version, domainname}.

* 7. Ответ: 
* Команды, разделенные ; , выполняются последовательно независимо от их статуса завершения.
* С && вторая команда выполняется только в том случае , если первая завершается успешно (возвращает статус выхода 0).

* Есть ли смысл использовать в bash &&, если применить set -e?
* При применении флага -e оболочка завершится, если команда завершается с ненулевым статусом. 
* при использовании && и команды set -е, если одна из команд, разделенных && завершится, то выхода из оболочки не будет.

* 8. Ответ: 
* -e завершит работу при возникновении ошибки выполнения любой команды, кроме последней . 
* -u не заданные параметры считаются как ошибки, текст ошибки выводится в stderr, выполняется завершение вызова
* -x вывод все команд перед их исполнением.
* -o pipefail  возвращает только код ошибки последней команды в пайпе (конвейере)

* В сценариях использование режима позволяет детализировать отчеты об ошибках.

* 9. Ответ: 

vagrant@vagrant:~$ ps -d -o stat | sort | uniq -c
     * 7 I
     * 39 I<
     *  2 R+
     * 25 S
     * 1 S+
     * 5 S<
     * 1 Sl
     * 2 SN
     * 1 STAT
* S - процессы ожидающие завершения.
* I - бездействующие процессы ядра.
* Дополнительные символы используют для дополнительных описаний, например приоритета или статуса запущенных процессов


